# Table de vérité
# Générée à partir du circuit SAMS_Opcode
# Exportée dans Sun Jan 09 14:34:50 CET 2022

# Conseils et remarques sur la mise en forme :
# * Vous pouvez modifier ce fichier, puis le réimporter dans Logisim !
# * Tout ce qui suit un '#' correspond à un commentaire et sera ignoré. 
# * Lesl ignes vides et les lignes de séparation (par exemple : ~~~~~~) sont ignorées.
# * Utilisez des noms de colonne simples (sans espaces, ni ponctuation, etc.)
# * 'Nom[N..0]' indique une variable de N + 1 bits, alors que
# 'Nom' tout seul indique une variable de 1 bit.
# * Vous pouvez utiliser 'x' ou '-' pour indiquer "indifférent" pour les 
# bits d'entrée et de sortie.
# * Vous pouvez utiliser la notation binaire (par exemple, '10100011xxxx') ou 
# ou hexadécimale (par exemple, 'C3x'). Logisim déterminera la notation utilisée.

opCode[4..0] | ALU_Opcode[3..0]
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   00000     |       0010      
   00001     |       0010      
   00010     |       0010      
   00011     |       0010      
   00100     |       0011      
   00101     |       0011      
   00110     |       0011      
   00111     |       0011      
   01000     |       0100      
   01001     |       0100      
   01010     |       0100      
   01011     |       0100      
   01100     |       0101      
   01101     |       0110      
   01110     |       0100      
   01111     |       0110      
   10000     |       1001      
   10001     |       1001      
   10010     |       1001      
   10011     |       1001      
   10100     |       1010      
   10101     |       1010      
   10110     |       1010      
   10111     |       1010      
   11000     |       0100      
   11001     |       0100      
   11010     |       0100      
   11011     |       0100      
   11100     |       0110      
   11101     |       0110      
   11110     |       0110      
   11111     |       0110      
